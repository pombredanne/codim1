Python 2.7.6 (default, Mar 22 2014, 22:59:56) 
Type "copyright", "credits" or "license" for more information.

IPython 1.2.1 -- An enhanced Interactive Python.
?         -> Introduction and overview of IPython's features.
%quickref -> Quick reference.
help      -> Python's own help system.
object?   -> Details about 'object', use 'object??' for extra details.

In [1]: import gauss
Caching the list of root modules, please wait!
(This will only be done once - type '%rehashx' to reset cache!)

ian_quad
gaussian_quad

In [1]: import gaussian_quad

In [2]: import gaussian_quad as gq

In [3]: gq.gauss(3)
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-3-7e44944a33a8> in <module>()
----> 1 gq.gauss(3)

AttributeError: 'module' object has no attribute 'gauss'

In [4]: gq.gaussxw(3)
Out[4]: 
(array([  7.74596669e-01,  -8.96888137e-17,  -7.74596669e-01]),
 array([ 0.55555556,  0.88888889,  0.55555556]))

In [5]: x, w = gq.gaussxw(3)

In [6]: f = lambda x: x**5

In [7]: f_exact = lambda x:(1.0/6.0) * x**6

In [8]: f_exact = lambda x:(1.0/6.0) * x**6

In [9]: correct = f_exact(1.0) - f_exact(-1.0)

In [10]: correct
Out[10]: 0.0

In [11]: f(x)
Out[11]: array([  2.78854801e-01,  -5.80351884e-81,  -2.78854801e-01])

In [12]: w * f(x)
Out[12]: array([  1.54919334e-01,  -5.15868341e-81,  -1.54919334e-01])

In [13]: sum(w * f(x))
Out[13]: 5.2735593669694936e-16

In [14]: f = lambda x: x**7

In [15]: sum(w * f(x))
Out[15]: 2.9143354396410359e-16

In [16]: f = lambda x: x**6

In [17]: sum(w * f(x))
Out[17]: 0.23999999999999996

In [18]: f_exact = lambda x:(1.0/7.0) * x**7

In [19]: correct = f_exact(1.0) - f_exact(-1.0)

In [20]: correct
Out[20]: 0.2857142857142857

In [21]: x,w = gq.gaussxw(20)

In [22]: x
Out[22]: 
array([ 0.9931286 ,  0.96397193,  0.91223443,  0.83911697,  0.74633191,
        0.63605368,  0.510867  ,  0.37370609,  0.22778585,  0.07652652,
       -0.07652652, -0.22778585, -0.37370609, -0.510867  , -0.63605368,
       -0.74633191, -0.83911697, -0.91223443, -0.96397193, -0.9931286 ])

In [23]: w
Out[23]: 
array([ 0.01761401,  0.04060143,  0.06267205,  0.08327674,  0.10193012,
        0.11819453,  0.13168864,  0.14209611,  0.14917299,  0.15275339,
        0.15275339,  0.14917299,  0.14209611,  0.13168864,  0.11819453,
        0.10193012,  0.08327674,  0.06267205,  0.04060143,  0.01761401])

In [24]: f_exact = lambda x:(1.0/41.0) * x**41

In [25]: f = lambda x: x**40

In [26]: correct = f_exact(1.0) - f_exact(-1.0)

In [27]: correct
Out[27]: 0.04878048780487805

In [28]: sum(w * f(x))
Out[28]: 0.048780487802052658

In [29]: f_exact = lambda x:(1.0/42.0) * x**42

In [30]: correct = f_exact(1.0) - f_exact(-1.0)

In [31]: correct
Out[31]: 0.0

In [32]: f = lambda x: x**41

In [33]: sum(w * f(x))
Out[33]: 1.717376241217039e-15

In [34]: f_exact = lambda x:(1.0/43.0) * x**43

In [35]: correct = f_exact(1.0) - f_exact(-1.0)

In [36]: correct
Out[36]: 0.046511627906976744

In [37]: f = lambda x: x**42

In [38]: sum(w * f(x))
Out[38]: 0.046511627878059292

In [39]: f_exact = lambda x:(1.0/50.0) * x**50

In [40]: correct = f_exact(1.0) - f_exact(-1.0)

In [41]: correct
Out[41]: 0.0

In [42]: f_exact = lambda x:(1.0/51.0) * x**51

In [43]: correct = f_exact(1.0) - f_exact(-1.0)

In [44]: correct
Out[44]: 0.0392156862745098

In [45]: f = lambda x: x**50

In [46]: sum(w * f(x))
Out[46]: 0.039215681084525139

In [47]: sum(w * f(x)) - correct
Out[47]: -5.1899846642555758e-09

In [48]: f_exact = lambda x:(1.0/101.0) * x**101

In [49]: correct = f_exact(1.0) - f_exact(-1.0)

In [50]: f = lambda x: x**100

In [51]: sum(w * f(x)) - correct
Out[51]: -4.0783779569959766e-05


